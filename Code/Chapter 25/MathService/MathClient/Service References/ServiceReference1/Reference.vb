'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace ServiceReference1
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="www.intertech.com", ConfigurationName:="ServiceReference1.IBasicMath")>  _
    Public Interface IBasicMath
        
        <System.ServiceModel.OperationContractAttribute(Action:="www.intertech.com/IBasicMath/Add", ReplyAction:="www.intertech.com/IBasicMath/AddResponse")>  _
        Function Add(ByVal x As Integer, ByVal y As Integer) As Integer
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="www.intertech.com/IBasicMath/Add", ReplyAction:="www.intertech.com/IBasicMath/AddResponse")>  _
        Function BeginAdd(ByVal x As Integer, ByVal y As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndAdd(ByVal result As System.IAsyncResult) As Integer
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")>  _
    Public Interface IBasicMathChannel
        Inherits ServiceReference1.IBasicMath, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")>  _
    Partial Public Class AddCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Integer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")>  _
    Partial Public Class BasicMathClient
        Inherits System.ServiceModel.ClientBase(Of ServiceReference1.IBasicMath)
        Implements ServiceReference1.IBasicMath
        
        Private onBeginAddDelegate As BeginOperationDelegate
        
        Private onEndAddDelegate As EndOperationDelegate
        
        Private onAddCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Event AddCompleted As System.EventHandler(Of AddCompletedEventArgs)
        
        Public Function Add(ByVal x As Integer, ByVal y As Integer) As Integer Implements ServiceReference1.IBasicMath.Add
            Return MyBase.Channel.Add(x, y)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginAdd(ByVal x As Integer, ByVal y As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements ServiceReference1.IBasicMath.BeginAdd
            Return MyBase.Channel.BeginAdd(x, y, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndAdd(ByVal result As System.IAsyncResult) As Integer Implements ServiceReference1.IBasicMath.EndAdd
            Return MyBase.Channel.EndAdd(result)
        End Function
        
        Private Function OnBeginAdd(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim x As Integer = CType(inValues(0),Integer)
            Dim y As Integer = CType(inValues(1),Integer)
            Return Me.BeginAdd(x, y, callback, asyncState)
        End Function
        
        Private Function OnEndAdd(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Integer = Me.EndAdd(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnAddCompleted(ByVal state As Object)
            If (Not (Me.AddCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent AddCompleted(Me, New AddCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub AddAsync(ByVal x As Integer, ByVal y As Integer)
            Me.AddAsync(x, y, Nothing)
        End Sub
        
        Public Overloads Sub AddAsync(ByVal x As Integer, ByVal y As Integer, ByVal userState As Object)
            If (Me.onBeginAddDelegate Is Nothing) Then
                Me.onBeginAddDelegate = AddressOf Me.OnBeginAdd
            End If
            If (Me.onEndAddDelegate Is Nothing) Then
                Me.onEndAddDelegate = AddressOf Me.OnEndAdd
            End If
            If (Me.onAddCompletedDelegate Is Nothing) Then
                Me.onAddCompletedDelegate = AddressOf Me.OnAddCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginAddDelegate, New Object() {x, y}, Me.onEndAddDelegate, Me.onAddCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
